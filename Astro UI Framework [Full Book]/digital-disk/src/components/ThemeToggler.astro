<button aria-label="Theme Toggle">
  <svg width="25px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path
      class="sun"
      fill-rule="evenodd"
      d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
    ></path>
    <path
      class="moon"
      fill-rule="evenodd"
      d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
    ></path>
  </svg>
</button>

<style>
  button {
    background: var(--background); /* Use the background color variable */
    border-radius: 10px; /* Round the corners of the button */
    border: 0; /* Remove the border */
    cursor: pointer; /* Make the cursor look like a hand when hovered */
    padding: 5px 10px; /* Add some padding to the button */
    transition: all 0.2s ease-in-out; /* Add a transition effect to all properties */
    position: absolute; /* Position the ThemeToggler component */
    top: 1.5rem; /* Adjust the vertical position as needed */
    right: 1.5rem; /* Adjust the horizontal position as needed */
  }

  button:hover {
    /* Make the button smaller (scale down) when hovered */
    transform: scale(0.9);
  }

  button:active {
    /** Return the button to its standard size when active */
    transform: scale(1);
  }

  .sun {
    /* Hide the sun icon by default. This assumes a light theme by default */
    fill: transparent;
  }

  :global(.dark) .sun {
    /* Show the sun icon when the dark theme is active */
    fill: #f1c40f;
  }

  :global(.dark) .moon {
    /* Hide the moon icon when the dark theme is active */
    fill: transparent;
  }
</style>

<script>
  /** Represent the toggle theme class with a variable */
  const DARK_THEME_CLASS = "dark";

  /** Grab the toggle */
  const toggle = document.querySelector("button");
  /** Grab the document root element. In this case <html> */
  const rootEl = document.documentElement;

  const title = document.title;

  // Retrieve the theme from localStorage
  const savedTheme = localStorage.getItem(title);

  // If the user has a theme saved, apply it to the document root
  if (savedTheme) {
    rootEl.classList.add(savedTheme); // Add the saved theme class to the root element
  }

  // Listen for clicks on the toggle
  if (toggle) {
    toggle.addEventListener("click", () => {
      // Toggle the "dark" class on the root element
      rootEl.classList.toggle(DARK_THEME_CLASS);

      // Store the current theme in localStorage
      const currentTheme = rootEl.classList.contains(DARK_THEME_CLASS)
        ? DARK_THEME_CLASS
        : "";
      localStorage.setItem(title, currentTheme); // Save the current theme to localStorage
    });
  }
</script>
